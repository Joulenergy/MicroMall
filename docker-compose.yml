services:
  rabbitmq:
    build: ./rabbitmq
    hostname: 'myrabbit'
    ports:
      - '5672:5672'
      - '15672:15672'
    expose:
      - 15692
    container_name: rabbitmq
    volumes:
      - rabbit-data:/var/lib/rabbitmq

  frontend-service:
    build: ./frontend-service
    container_name: frontend-service
    depends_on:
      - rabbitmq
    volumes: # for development
      - ./frontend-service:/app
      - ./cleanup.js:/app/cleanup.js
    env_file:
      - ./frontend-service/frontend.env
    ports:
      - 3000:3000

  auth-mongo:
    image: mongo
    container_name: auth-mongo
    volumes:
      - auth-data:/data/db
    ports:
      - 5001:27017 # so that can access on mongodb compass

  auth-service:
    build: ./auth-service
    container_name: auth-service
    depends_on:
      - auth-mongo
      - rabbitmq
    environment:
      - RABBIT_USERNAME=auth
      - RABBIT_PASSWORD=auth
    volumes: # for development
      - ./auth-service:/app
      - /app/node_modules
      - ./rabbitmq/useRabbit.js:/app/useRabbit.js
      - ./rabbitmq/rabbitmq.js:/app/rabbitmq.js
      - ./cleanup.js:/app/cleanup.js

  product-mongo:
    image: mongo
    container_name: product-mongo
    volumes:
      - product-data:/data/db
    ports:
      - 5002:27017

  product-service:
    build: ./product-service
    container_name: product-service
    depends_on:
      - rabbitmq
      - product-mongo
    environment:
      - RABBIT_USERNAME=product
      - RABBIT_PASSWORD=product
    volumes: # for development
      - ./product-service:/app
      - /app/node_modules
      - ./rabbitmq/useRabbit.js:/app/useRabbit.js
      - ./rabbitmq/rabbitmq.js:/app/rabbitmq.js
      - ./cleanup.js:/app/cleanup.js
    env_file:
      - .env

  cart-mongo:
    image: mongo
    container_name: cart-mongo
    volumes:
      - cart-data:/data/db
    ports:
      - 5003:27017

  cart-service:
    build: ./cart-service
    container_name: cart-service
    depends_on:
      - rabbitmq
      - cart-mongo
    environment:
      - RABBIT_USERNAME=cart
      - RABBIT_PASSWORD=cart
    volumes: # for development
      - ./cart-service:/app
      - /app/node_modules
      - ./rabbitmq/useRabbit.js:/app/useRabbit.js
      - ./rabbitmq/rabbitmq.js:/app/rabbitmq.js
      - ./cleanup.js:/app/cleanup.js

  order-mongo:
    image: mongo
    container_name: order-mongo
    volumes:
      - order-data:/data/db
    ports:
      - 5004:27017

  order-service:
    build: ./order-service
    container_name: order-service
    depends_on:
      - rabbitmq
      - order-mongo
    environment:
      - RABBIT_USERNAME=order
      - RABBIT_PASSWORD=order
    volumes: # for development
      - ./order-service:/app
      - /app/node_modules
      - ./rabbitmq/useRabbit.js:/app/useRabbit.js
      - ./rabbitmq/rabbitmq.js:/app/rabbitmq.js
      - ./cleanup.js:/app/cleanup.js
    env_file:
      - .env

  payment-service:
    build: ./payment-service
    container_name: payment-service
    depends_on:
      - rabbitmq
    ports:
      - 8000:8000
    volumes: # for development
        - ./payment-service:/app
        - /app/node_modules
        - ./cleanup.js:/app/cleanup.js
    env_file:
      - .env
      - ./payment-service/payment.env

  # monitoring services
  cadvisor:
    image: gcr.io/google-containers/cadvisor
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - rabbitmq

  prometheus:
    build: ./prometheus 
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - prometheus-data:/prometheus
    depends_on:
      - cadvisor
      - promtail
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      # defaults to admin admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      # bind mount for dashboard json files
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - cadvisor
      - prometheus
    ports:
      - 3001:3000 # 3000 being used by frontend
  
  loki:
    image: grafana/loki
    container_name: loki
    volumes:
      - loki-data:/loki
    ports:
      - 3100:3100

  promtail:
    image:  grafana/promtail
    container_name: promtail
    volumes:
      - C:/Users/Intern-1CT2/AppData/Local/Docker/log/vm:/dockerlogs
      - ./promtail/promtail.yml:/etc/promtail/docker-config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/docker-config.yml
    depends_on:
      - loki
    ports:
      - 9080:9080

volumes:
  auth-data:
  product-data:
  cart-data:
  rabbit-data:
  order-data:
  prometheus-data:
  grafana-data:
  loki-data: